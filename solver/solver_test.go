package solver_test

import (
	"errors"
	"testing"

	"github.com/olden/sudoku/solver"
)

func TestSolver(t *testing.T) {
	for n, gameCase := range gameCases {
		s := solver.NewSolver()
		r, err := s.Solve()
		if gameCase.err != nil && err != gameCase.err {
			t.Errorf("%s: \n\tresult error: %v \n\texpected error: %v", n, err, gameCase.err)
			continue
		}
		if r != gameCase.expected {
			t.Errorf("%s \n\tresult: %v \n\texpected: %v", n, gameCase.input, gameCase.expected)
		}
	}
}

type gameCase struct {
	input    [9][9]int
	expected interface{}
	err      error
}

var gameCases = map[string]gameCase{
	"from golang challenge": {
		[9][9]int{ // from golang challenge
			{1, 0, 3, 0, 0, 6, 0, 8, 0},
			{0, 5, 0, 0, 8, 0, 1, 2, 0},
			{7, 0, 9, 1, 0, 3, 0, 5, 6},
			{0, 3, 0, 0, 6, 7, 0, 9, 0},
			{5, 0, 7, 8, 0, 0, 0, 3, 0},
			{8, 0, 1, 0, 3, 0, 5, 0, 7},
			{0, 4, 0, 0, 7, 8, 0, 1, 0},
			{6, 0, 8, 0, 0, 2, 0, 4, 0},
			{0, 1, 2, 0, 4, 5, 0, 7, 8},
		},
		[9][9]int{
			{1, 2, 3, 4, 5, 6, 7, 8, 9},
			{4, 5, 6, 7, 8, 9, 1, 2, 3},
			{7, 8, 9, 1, 2, 3, 4, 5, 6},
			{2, 3, 4, 5, 6, 7, 8, 9, 1},
			{5, 6, 7, 8, 9, 1, 2, 3, 4},
			{8, 9, 1, 2, 3, 4, 5, 6, 7},
			{3, 4, 5, 6, 7, 8, 9, 1, 2},
			{6, 7, 8, 9, 1, 2, 3, 4, 5},
			{9, 1, 2, 3, 4, 5, 6, 7, 8},
		},
		nil,
	},
	// test cases from: http://sudopedia.enjoysudoku.com/Test_Cases.html
	"more than enough": {
		[9][9]int{
			{9, 7, 4, 2, 3, 6, 1, 5, 8},
			{6, 3, 8, 5, 9, 1, 7, 4, 2},
			{1, 2, 5, 4, 8, 7, 9, 3, 6},
			{3, 1, 6, 7, 5, 4, 2, 8, 9},
			{7, 4, 2, 9, 1, 8, 5, 6, 3},
			{5, 8, 9, 3, 6, 2, 4, 1, 7},
			{8, 6, 7, 1, 2, 5, 3, 9, 4},
			{2, 5, 3, 6, 4, 9, 8, 7, 1},
			{4, 9, 1, 8, 7, 3, 6, 2, 5},
		},
		[9][9]int{
			{9, 7, 4, 2, 3, 6, 1, 5, 8},
			{6, 3, 8, 5, 9, 1, 7, 4, 2},
			{1, 2, 5, 4, 8, 7, 9, 3, 6},
			{3, 1, 6, 7, 5, 4, 2, 8, 9},
			{7, 4, 2, 9, 1, 8, 5, 6, 3},
			{5, 8, 9, 3, 6, 2, 4, 1, 7},
			{8, 6, 7, 1, 2, 5, 3, 9, 4},
			{2, 5, 3, 6, 4, 9, 8, 7, 1},
			{4, 9, 1, 8, 7, 3, 6, 2, 5},
		},
		nil,
	},
	"Last Empty Square": {
		[9][9]int{
			{2, 5, 6, 4, 8, 9, 1, 7, 3},
			{3, 7, 4, 6, 1, 5, 9, 8, 2},
			{9, 8, 1, 7, 2, 3, 4, 5, 6},
			{5, 9, 3, 2, 7, 4, 8, 6, 1},
			{7, 1, 2, 8, 0, 6, 5, 4, 9},
			{4, 6, 8, 5, 9, 1, 3, 2, 7},
			{6, 3, 5, 1, 4, 7, 2, 9, 8},
			{1, 2, 7, 9, 5, 8, 6, 3, 4},
			{8, 4, 9, 3, 6, 2, 7, 1, 5},
		},
		[9][9]int{
			{2, 5, 6, 4, 8, 9, 1, 7, 3},
			{3, 7, 4, 6, 1, 5, 9, 8, 2},
			{9, 8, 1, 7, 2, 3, 4, 5, 6},
			{5, 9, 3, 2, 7, 4, 8, 6, 1},
			{7, 1, 2, 8, 3, 6, 5, 4, 9},
			{4, 6, 8, 5, 9, 1, 3, 2, 7},
			{6, 3, 5, 1, 4, 7, 2, 9, 8},
			{1, 2, 7, 9, 5, 8, 6, 3, 4},
			{8, 4, 9, 3, 6, 2, 7, 1, 5},
		},
		nil,
	},
	"Naked Singles": {
		[9][9]int{
			{3, 0, 5, 4, 2, 0, 8, 1, 0},
			{4, 8, 7, 9, 0, 1, 5, 0, 6},
			{0, 2, 9, 0, 5, 6, 3, 7, 4},
			{8, 5, 0, 7, 9, 3, 0, 4, 1},
			{6, 1, 3, 2, 0, 8, 9, 5, 7},
			{0, 7, 4, 0, 6, 5, 2, 8, 0},
			{2, 4, 1, 3, 0, 9, 0, 6, 5},
			{5, 0, 8, 6, 7, 0, 1, 9, 2},
			{0, 9, 6, 5, 1, 2, 4, 0, 8},
		},
		[9][9]int{
			{3, 6, 5, 4, 2, 7, 8, 1, 9},
			{4, 8, 7, 9, 3, 1, 5, 2, 6},
			{1, 2, 9, 8, 5, 6, 3, 7, 4},
			{8, 5, 2, 7, 9, 3, 6, 4, 1},
			{6, 1, 3, 2, 4, 8, 9, 5, 7},
			{9, 7, 4, 1, 6, 5, 2, 8, 3},
			{2, 4, 1, 3, 8, 9, 7, 6, 5},
			{5, 3, 8, 6, 7, 4, 1, 9, 2},
			{7, 9, 6, 5, 1, 2, 4, 3, 8},
		},
		nil,
	},
	"Hidden Singles": {
		[9][9]int{
			{0, 0, 2, 0, 3, 0, 0, 0, 8},
			{0, 0, 0, 0, 0, 8, 0, 0, 0},
			{0, 3, 1, 0, 2, 0, 0, 0, 0},
			{0, 6, 0, 0, 5, 0, 2, 7, 0},
			{0, 1, 0, 0, 0, 0, 0, 5, 0},
			{2, 0, 4, 0, 6, 0, 0, 3, 1},
			{0, 0, 0, 0, 8, 0, 6, 0, 5},
			{0, 0, 0, 0, 0, 0, 0, 1, 3},
			{0, 0, 5, 3, 1, 0, 4, 0, 0},
		},
		[9][9]int{
			{6, 7, 2, 4, 3, 5, 1, 9, 8},
			{5, 4, 9, 1, 7, 8, 3, 6, 2},
			{8, 3, 1, 6, 2, 9, 5, 4, 7},
			{3, 6, 8, 9, 5, 1, 2, 7, 4},
			{9, 1, 7, 2, 4, 3, 8, 5, 6},
			{2, 5, 4, 8, 6, 7, 9, 3, 1},
			{1, 9, 3, 7, 8, 4, 6, 2, 5},
			{4, 8, 6, 5, 9, 2, 7, 1, 3},
			{7, 2, 5, 3, 1, 6, 4, 8, 9},
		},
		nil,
	},
	// invalid cases
	"Empty": {
		[9][9]int{
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
		},
		nil,
		errors.New("not enough givens"),
	},
	"Single Given": {
		[9][9]int{
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 1, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
		},
		nil,
		errors.New("not enough givens"),
	},
	"Insufficient Givens": {
		[9][9]int{
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 5, 0, 0, 0, 0, 9, 0},
			{0, 0, 4, 0, 0, 0, 0, 1, 0},
			{2, 0, 0, 0, 0, 3, 0, 5, 0},
			{0, 0, 0, 7, 0, 0, 0, 0, 0},
			{4, 3, 8, 0, 0, 0, 2, 0, 0},
			{0, 0, 0, 0, 9, 0, 0, 0, 0},
			{0, 1, 0, 4, 0, 0, 0, 6, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
		},
		nil,
		errors.New("not enough givens"),
	},
	"Duplicate Given — Box": {
		[9][9]int{
			{0, 0, 9, 0, 7, 0, 0, 0, 5},
			{0, 0, 2, 1, 0, 0, 9, 0, 0},
			{1, 0, 0, 0, 2, 8, 0, 0, 0},
			{0, 7, 0, 0, 0, 5, 0, 0, 1},
			{0, 0, 8, 5, 1, 0, 0, 0, 0},
			{0, 5, 0, 0, 0, 0, 3, 0, 0},
			{0, 0, 0, 0, 0, 3, 0, 0, 6},
			{8, 0, 0, 0, 0, 0, 0, 0, 0},
			{2, 1, 0, 0, 0, 0, 0, 8, 7},
		},
		nil,
		errors.New("no solution"),
	},
	"Duplicate Given — Column": {
		[9][9]int{
			{6, 0, 1, 5, 9, 0, 0, 0, 0},
			{0, 9, 0, 0, 1, 0, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 4},
			{0, 7, 0, 3, 1, 4, 0, 0, 6},
			{0, 2, 4, 0, 0, 0, 0, 0, 5},
			{0, 0, 3, 0, 0, 0, 0, 1, 0},
			{0, 0, 6, 0, 0, 0, 0, 0, 3},
			{0, 0, 0, 9, 0, 2, 0, 4, 0},
			{0, 0, 0, 0, 0, 1, 6, 0, 0},
		},
		nil,
		errors.New("no solution"),
	},
	"Duplicate Given — Row": {
		[9][9]int{
			{0, 4, 0, 1, 0, 0, 3, 5, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 0, 0, 2, 0, 5, 0, 0, 0},
			{0, 0, 0, 4, 0, 8, 9, 0, 0},
			{2, 6, 0, 0, 0, 0, 0, 1, 2},
			{0, 5, 0, 3, 0, 0, 0, 0, 7},
			{0, 0, 4, 0, 0, 0, 1, 6, 0},
			{6, 0, 0, 0, 0, 7, 0, 0, 0},
			{0, 1, 0, 0, 8, 0, 0, 2, 0},
		},
		nil,
		errors.New("no solution"),
	},
	"Unsolvable Square": {
		[9][9]int{
			{0, 0, 9, 0, 2, 8, 7, 0, 0},
			{8, 0, 6, 0, 0, 4, 0, 0, 5},
			{0, 0, 3, 0, 0, 0, 0, 0, 4},
			{6, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 2, 0, 7, 1, 3, 4, 5, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 2},
			{3, 0, 0, 0, 0, 0, 5, 0, 0},
			{9, 0, 0, 4, 0, 0, 8, 0, 7},
			{0, 0, 1, 2, 5, 0, 3, 0, 0},
		},
		nil,
		errors.New("no solution"),
	},
	"Unsolvable Box": {
		[9][9]int{
			{0, 9, 0, 3, 0, 0, 0, 0, 1},
			{0, 0, 0, 0, 8, 0, 0, 4, 6},
			{0, 0, 0, 0, 0, 0, 8, 0, 0},
			{4, 0, 5, 0, 6, 0, 0, 3, 0},
			{0, 0, 3, 2, 7, 5, 6, 0, 0},
			{0, 6, 0, 0, 1, 0, 9, 0, 4},
			{0, 0, 1, 0, 0, 0, 0, 0, 0},
			{5, 8, 0, 0, 2, 0, 0, 0, 0},
			{2, 0, 0, 0, 0, 7, 0, 6, 0},
		},
		nil,
		errors.New("no solution"),
	},
	"Unsolvable Column": {
		[9][9]int{
			{0, 0, 0, 0, 4, 1, 0, 0, 0},
			{0, 6, 0, 0, 0, 0, 0, 2, 0},
			{0, 0, 2, 0, 0, 0, 0, 0, 0},
			{3, 2, 0, 6, 0, 0, 0, 0, 0},
			{0, 0, 0, 0, 5, 0, 0, 4, 1},
			{7, 0, 0, 0, 0, 0, 0, 0, 2},
			{0, 0, 0, 0, 0, 0, 2, 3, 0},
			{0, 4, 8, 0, 0, 0, 0, 0, 0},
			{5, 0, 1, 0, 0, 2, 0, 0, 0},
		},
		nil,
		errors.New("no solution"),
	},
	"Unsolvable Row": {
		[9][9]int{
			{9, 0, 0, 1, 0, 0, 0, 0, 4},
			{0, 1, 4, 0, 3, 0, 8, 0, 0},
			{0, 0, 3, 0, 0, 0, 0, 9, 0},
			{0, 0, 0, 7, 0, 8, 0, 0, 1},
			{8, 0, 0, 0, 0, 3, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 3, 0},
			{0, 2, 1, 0, 0, 0, 0, 7, 0},
			{0, 0, 9, 0, 4, 0, 5, 0, 0},
			{5, 0, 0, 0, 1, 6, 0, 0, 3},
		},
		nil,
		errors.New("no solution"),
	},
	"Not Unique — 2 Solutions": {
		[9][9]int{
			{0, 3, 9, 0, 0, 0, 1, 2, 0},
			{0, 0, 0, 9, 0, 7, 0, 0, 0},
			{8, 0, 0, 4, 0, 1, 0, 0, 6},
			{0, 4, 2, 0, 0, 0, 7, 9, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{0, 9, 1, 0, 0, 0, 5, 4, 0},
			{5, 0, 0, 1, 0, 9, 0, 0, 3},
			{0, 0, 0, 8, 0, 5, 0, 0, 0},
			{0, 1, 4, 0, 0, 0, 8, 7, 0},
		},
		nil,
		errors.New("no unique solution"),
	},
	"Not Unique — 3 Solutions": {
		[9][9]int{
			{0, 0, 3, 0, 0, 0, 0, 0, 6},
			{0, 0, 0, 9, 8, 0, 0, 2, 0},
			{9, 4, 2, 6, 0, 0, 7, 0, 0},
			{4, 5, 0, 0, 0, 6, 0, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
			{1, 0, 9, 0, 5, 0, 4, 7, 0},
			{0, 0, 0, 0, 2, 5, 0, 4, 0},
			{6, 0, 0, 0, 7, 8, 5, 0, 0},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
		},
		nil,
		errors.New("no unique solution"),
	},
	"Not Unique — 4 Solutions": {
		[9][9]int{
			{0, 0, 0, 0, 9, 0, 0, 0, 0},
			{6, 0, 0, 4, 0, 7, 0, 0, 8},
			{0, 4, 0, 8, 1, 2, 0, 3, 0},
			{7, 0, 0, 0, 0, 0, 0, 0, 5},
			{0, 0, 4, 0, 0, 0, 9, 0, 0},
			{5, 0, 0, 3, 7, 1, 0, 0, 4},
			{0, 5, 0, 0, 6, 0, 0, 4, 0},
			{2, 0, 1, 7, 0, 8, 5, 0, 9},
			{0, 0, 0, 0, 0, 0, 0, 0, 0},
		},
		nil,
		errors.New("no unique solution"),
	},
	"Not Unique — 10 Solutions": {
		[9][9]int{
			{5, 9, 0, 0, 0, 0, 0, 4, 8},
			{6, 0, 8, 0, 0, 0, 3, 0, 7},
			{0, 0, 0, 2, 0, 1, 0, 0, 0},
			{0, 0, 0, 0, 4, 0, 0, 0, 0},
			{0, 7, 5, 3, 0, 6, 9, 8, 0},
			{0, 0, 0, 0, 9, 0, 0, 0, 0},
			{0, 0, 0, 8, 0, 3, 0, 0, 0},
			{2, 0, 6, 0, 0, 0, 7, 0, 9},
			{3, 4, 0, 0, 0, 0, 0, 6, 5},
		},
		nil,
		errors.New("no unique solution"),
	},
	"Not Unique — 125 Solutions": {
		[9][9]int{
			{0, 0, 0, 3, 1, 6, 5, 0, 0},
			{8, 0, 0, 5, 0, 0, 1, 0, 0},
			{0, 1, 0, 8, 9, 7, 2, 4, 0},
			{9, 0, 1, 0, 8, 5, 0, 2, 0},
			{0, 0, 0, 9, 0, 1, 0, 0, 0},
			{0, 4, 0, 2, 6, 3, 0, 0, 1},
			{0, 5, 0, 0, 0, 0, 0, 1, 0},
			{1, 0, 0, 4, 0, 9, 0, 0, 2},
			{0, 0, 6, 1, 0, 8, 0, 0, 0},
		},
		nil,
		errors.New("no unique solution"),
	},
}
